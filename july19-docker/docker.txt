JULY 18 2025

DOCKER - 
->isolated system where products can be run irrespective of the environment/machine
-> lightweight containers with all the dependencies to run a project
-> adv :
docker is faster than vm
portable

-> docker uses docker engines
-> apt install docker.io (installation in linux)
->docker  images : like packets of data which can be run on any OS , when dockers are run these images are actaully run
* build a docker image 

================================
4 things - Docker,Container,Volumes,Networking
What is Docker ? 
# VM : mimics a physical machine
# multiple vms can be run on a single machine
* Docker container will make u feel s if ur using a VM 
containers: if it fits into a container it ships
ZDU = Zero Downtime Upgrade

for example if there is a python application created by a developer and he sends it to Q/A along with the PYTHON and other dependencies required for the application to run.
This can be carried till production

to create a Container- first create an image
from one image we can create any number of containers
(for linux distributions only) as they interact with the kernel
? can a dcoker image created in linux can be used in windows/mac 
ans: WSL 

Docker is designed to work with linux

* containers are create from local images (can be pulled from remote)
* client contacted the daemon
* daemon pulls the required image from Docker HUb
* to see stopped conatiners : docker ps -a

as containers have no OS they are stopped when there are no processes running (?)
stops running : when docker run ubuntu (?)
doesnt stop when running : 
 docker run -it ubuntu bash
 docker run ubuntu ps -ef
 
 -it : interactive and terminal access
 
 port forwarding?
 
 =============================================================
 
 COMMANDS :

1.docker run hello-world 
-> docker runs a container using the image named hello-world
-> Docker Client sends request to Docker Daemon
-> Docker Daemon pulled hello-world image from Docker Hub (if needed)
-> A new container was created from the image
-> The container ran a small program that printed the welcome message
-> Output was streamed back to your terminal

What is a Docker Image?
A Docker image is like a blueprint or template.
It is:
-> A read-only file that contains everything needed to run a program:
-> OS libraries
-> Code
-> Dependencies
-> Configurations
-> Used to create containers.
Think of it like a recipe for a dish.

What is a Docker Container?
A container is a running instance of an image.
It is:
-> Like a virtual machine but much lighter.
-> Isolated, but shares the same kernel as the host OS.
-> Temporary by default (it can be configured to persist).
-> Think of it like a cooked dish from the recipe.


Common Docker CLI Commands

-> docker --version   : View version	
-> docker run <options> <image>  :run container
-> docker ps -a       : lists all containers
ubuntu@ip-172-31-14-205:~$ docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED             STATUS                         PORTS     NAMES
01f3c2b300c9   hello-world   "/hello"   20 minutes ago      Exited (0) 20 minutes ago                dreamy_chaplygin
4d691232a96a   hello-world   "/hello"   About an hour ago   Exited (0) About an hour ago             infallible_shamir
656b2e429494   hello-world   "/hello"   About an hour ago   Exited (0) About an hour ago             agitated_sinoussi

-> docker ps	Only running containers
-> docker ps -a	All containers (running, stopped, exited, etc.)
-> docker stop <container-id> : Stop container	
-> docker rm <container-id> :  Remove container	

-> docker image ls : Shows all images stored on your computer.
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    74cc54e27dc4   5 months ago   10.1kB

->docker pull ubuntu  : Downloads an image(here,ubuntu) from Docker Hub to your computer 

 $ docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
32f112e3802c: Pull complete 
Digest: sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061
Status: Downloaded newer image for ubuntu:latest
docker.io/library/ubuntu:latest

ubuntu@ip-172-31-14-205:~$ docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
ubuntu        latest    65ae7a6f3544   4 days ago     78.1MB
hello-world   latest    74cc54e27dc4   5 months ago   10.1kB

=========================================================
Scenario 1: Running a Web Server# Pull nginx image
========================================================

ubuntu@ip-172-31-14-205:~$ docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
3da95a905ed5: Pull complete 
037111f539a0: Pull complete 
1e537b66692c: Pull complete 
d3618cedc15e: Pull complete 
63b1ad245775: Pull complete 
40c013bb3d47: Pull complete 
ec5daaed1d0a: Pull complete 
Digest: sha256:f5c017fb33c6db484545793ffb67db51cdd7daebee472104612f73a85063f889
Status: Downloaded newer image for nginx:latest
docker.io/library/nginx:latest
ubuntu@ip-172-31-14-205:~$ docker run -d -p 8080:80 --name my-web nginx
6a70b7ab612226a519139bd9a4576e2551b52b60d65eca1860b5c80449805381
ubuntu@ip-172-31-14-205:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                     NAMES
6a70b7ab6122   nginx     "/docker-entrypoint.‚Ä¶"   8 seconds ago   Up 7 seconds   0.0.0.0:8080->80/tcp, [::]:8080->80/tcp   my-web
ubuntu@ip-172-31-14-205:~$ docker logs my-web
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2025/07/19 09:31:03 [notice] 1#1: using the "epoll" event method
2025/07/19 09:31:03 [notice] 1#1: nginx/1.29.0
2025/07/19 09:31:03 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14+deb12u1) 
2025/07/19 09:31:03 [notice] 1#1: OS: Linux 6.8.0-1029-aws
2025/07/19 09:31:03 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2025/07/19 09:31:03 [notice] 1#1: start worker processes
2025/07/19 09:31:03 [notice] 1#1: start worker process 28
2025/07/19 09:31:03 [notice] 1#1: start worker process 29
ubuntu@ip-172-31-14-205:~$ PORTS: 0.0.0.0:8080->80/tcp
-bash: 80/tcp: No such file or directory
ubuntu@ip-172-31-14-205:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                     NAMES
6a70b7ab6122   nginx     "/docker-entrypoint.‚Ä¶"   2 minutes ago   Up 2 minutes   0.0.0.0:8080->80/tcp, [::]:8080->80/tcp   my-web
ubuntu@ip-172-31-14-205:~$ 

after that i went to my browswer ,typed : http://3.15.192.87:8080
notes: 
Nginx is a very popular open-source web server.
It's used to serve websites, APIs, and files, and it's often used as a reverse proxy.
The Nginx organization provides a ready-made Docker image on Docker Hub.
2Ô∏è‚É£ What happened when you pulled and ran the image?
üî∏ docker pull nginx
‚û°Ô∏è Downloaded a pre-built Docker image from Docker Hub.
This image comes with Nginx pre-installed and configured to serve a default page.
üî∏ docker run -d -p 8080:80 --name my-web nginx
‚û°Ô∏è Ran that image inside a Docker container.
‚û°Ô∏è Exposed its internal port 80 (where Nginx listens) to your VM‚Äôs port 8080.


DOCKER VOLUMES:

Container will crash - at some cases(find?)
so they are ephemeral

so we should assume that a conatiner might crash easily-hence design it in such a way - say , stateless


ubuntu@ip-172-31-11-212:~$ docker ps -a
CONTAINER ID   IMAGE                 COMMAND           CREATED          STATUS                      PORTS     NAMES
1aed4fe80852   expense-tracker-app   "python app.py"   52 minutes ago   Exited (0) 52 minutes ago             sleepy_leavitt
afef26b2cd9d   expense-tracker-app   "python app.py"   53 minutes ago   Exited (0) 53 minutes ago             adoring_roentgen
14a3c224c308   expense-tracker-app   "python app.py"   54 minutes ago   Exited (0) 54 minutes ago             priceless_rhodes
8565107720d9   expense-tracker-app   "python app.py"   59 minutes ago   Exited (0) 55 minutes ago             modest_wozniak
0cb9fe87256e   hello-world           "/hello"          16 hours ago     Exited (0) 16 hours ago               inspiring_meitner
475bc49cf03e   ubuntu                "/bin/bash"       17 hours ago     Exited (127) 17 hours ago             hungry_mcnulty
5791060aa023   ubuntu                "/bin/bash"       17 hours ago     Exited (0) 17 hours ago               nifty_wiles
dc2032f9c671   ubuntu                "/bin/bash"       17 hours ago     Exited (0) 17 hours ago               amazing_bardeen
734e7ca588bc   hello-world           "/hello"          17 hours ago     Exited (0) 17 hours ago               romantic_germain
ubuntu@ip-172-31-11-212:~$ mkdir -p expense-tracker-app/static
ubuntu@ip-172-31-11-212:~$ cd expense-tracker-app/
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ vim app.py
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ vim requirements.txt
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ vim Dockerfile
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ cd static
ubuntu@ip-172-31-11-212:~/expense-tracker-app/static$ vim style.css
ubuntu@ip-172-31-11-212:~/expense-tracker-app/static$ cd ..
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ docker build -t expense-tracker-app .
                                                                                                                                                                    
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ docker images                                                                                                                                                       
REPOSITORY            TAG       IMAGE ID       CREATED             SIZE
expense-tracker-app   latest    fd69ad9d4cf9   26 seconds ago      281MB
<none>                <none>    a154200eb604   2 minutes ago       138MB
<none>                <none>    c82c0b2bb996   About an hour ago   138MB
<none>                <none>    5ad2b6277260   2 hours ago         138MB
ubuntu                latest    65ae7a6f3544   6 days ago          78.1MB
ubuntu                22.04     1d3ca894b30c   6 days ago          77.9MB
hello-world           latest    74cc54e27dc4   6 months ago        10.1kB
ubuntu@ip-172-31-11-212:~/expense-tracker-app$ docker run -p 5000:5000 expense-tracker-app

 * Serving Flask app 'app'
 * Debug mode: on
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.2:5000
Press CTRL+C to quit
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 142-571-442
117.211.170.154 - - [21/Jul/2025 06:17:53] "GET / HTTP/1.1" 200 -
117.211.170.154 - - [21/Jul/2025 06:17:54] "GET /static/style.css HTTP/1.1" 200 -
117.211.170.154 - - [21/Jul/2025 06:18:13] "POST /add HTTP/1.1" 302 -
117.211.170.154 - - [21/Jul/2025 06:18:13] "GET / HTTP/1.1" 200 -
117.211.170.154 - - [21/Jul/2025 06:18:14] "GET /static/style.css HTTP/1.1" 304 -
117.211.170.154 - - [21/Jul/2025 06:18:19] "GET / HTTP/1.1" 200 -
117.211.170.154 - - [21/Jul/2025 06:18:20] "GET /static/style.css HTTP/1.1" 304 -
^C

----------------------------------------------------------------
 $ ubuntu@ip-172-31-11-212:~$ docker run -d --name test-nginx nginx

 $ ubuntu@ip-172-31-11-212:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
6f1af67ca4c6   nginx     "/docker-entrypoint.‚Ä¶"   12 seconds ago   Up 11 seconds   80/tcp    test-nginx
 $ ubuntu@ip-172-31-11-212:~$ docker stop test-nginx
test-nginx
 $ ubuntu@ip-172-31-11-212:~$ 


=====rough notes======

multistage build:

performance of container depends on image
-like if we reduce the no. lines - no. of layers are get reduced

or we use MULTISTAGE BUILD
JDK includes .java (helpful for debugging)-generally used by developers
JRE doesnt contain .java- (usd in pdn env)


